export declare class BankNumber {
  private _algorithm;
  value: number;
  private _ranges;
  private constructor();
  containsBranchNumber(branchNumber: number): boolean;
  static one: BankNumber;
  static two: BankNumber;
  static three: BankNumber;
  static four: BankNumber;
  static six: BankNumber;
  static eight: BankNumber;
  static nine: BankNumber;
  static ten: BankNumber;
  static eleven: BankNumber;
  static twelve: BankNumber;
  static thirteen: BankNumber;
  static fourteen: BankNumber;
  static fifteen: BankNumber;
  static sixteen: BankNumber;
  static seventeen: BankNumber;
  static eighteen: BankNumber;
  static nineteen: BankNumber;
  static twenty: BankNumber;
  static twentyOne: BankNumber;
  static twentyTwo: BankNumber;
  static twentyThree: BankNumber;
  static twentyFour: BankNumber;
  static twentyFive: BankNumber;
  static twentySix: BankNumber;
  static twentySeven: BankNumber;
  static twentyEight: BankNumber;
  static twentyNine: BankNumber;
  static thirty: BankNumber;
  static thirtyOne: BankNumber;
  static thirtyThree: BankNumber;
  static thirtyFive: BankNumber;
  static thirtyEight: BankNumber;
  isFormattedAccountNumberValid(formattedAccountNumber: string): boolean;
}
